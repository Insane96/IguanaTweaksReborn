buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${mod_version}-mc${mc_version}"
group = 'insane96mcp.iguanatweaksreborn' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'IguanaTweaksReborn'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    // The mappings can be changed at any time and must be in the following format.
    // Channel:   Version:
    // snapshot   YYYYMMDD   Snapshot are built nightly.
    // stable     #          Stables are built at the discretion of the MCP team.
    // official   MCVersion  Official field/method names from Mojang mapping files
    //
    // You must be aware of the Mojang license when using the 'official' mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Use non-default mappings at your own risk. They may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'official', version: '1.18.2'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '-mixin.config=iguanatweaksreborn.mixins.json'

            mods {
                iguanatweaksreborn {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '-mixin.config=iguanatweaksreborn.mixins.json'

            mods {
                iguanatweaksreborn {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    flatDir {
        dir 'libs'
    }
}

mixin {
    add sourceSets.main, "iguanatweaksreborn.refmap.json"
}


dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.0.36'

    implementation fg.deobf("blank:InsaneLib:${lib_version}-mc${mc_version}")

    annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "iguanatweaksreborn",
                "Specification-Vendor"    : "Insane96MCP",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Insane96MCP",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "iguanatweaksreborn.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.register('zipDataPack', Zip) {
    archiveFileName = "IT Reborn DataPack-${mod_version}-mc${mc_version}.zip"
    destinationDirectory = layout.buildDirectory.dir("libs")
    from layout.projectDirectory.dir("DataPack")
}

build.dependsOn(zipDataPack)